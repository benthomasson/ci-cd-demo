- name: GitHub Deploy Git Hook Rules
  hosts: all
  sources:
    - name: azure_service_bus
      ansible.eda.azure_service_bus:
        conn_str: "{{connection_str}}"
        queue_name: "{{queue_name}}"
      filters:
        - json_filter:
            include_keys: ['clone_url']
            exclude_keys: ['*_url', '_links', 'base', 'sender', 'owner', 'user']
        - dashes_to_underscores:
  rules:
    - name: Pull Request Open
      condition: event.meta.headers.X_Github_Event == "pull_request" and event.payload.action == "opened"
      action:
        post_event:
          fact:
            repository_name: "{{event.payload.repository.full_name}}"
            repo: "{{event.payload.pull_request.head.repo.clone_url}}"
            ref: "{{event.payload.pull_request.head.ref}}"
            pr: "{{event.payload.number}}"
            sha: "{{event.payload.pull_request.head.sha}}"
    - name: Pull Request Reopen
      condition: event.meta.headers.X_Github_Event == "pull_request" and event.payload.action == "reopened"
      action:
        post_event:
          fact:
            repository_name: "{{event.payload.repository.full_name}}"
            repo: "{{event.payload.pull_request.head.repo.clone_url}}"
            ref: "{{event.payload.pull_request.head.ref}}"
            pr: "{{event.payload.number}}"
            sha: "{{event.payload.pull_request.head.sha}}"
    - name: Push to PR
      condition: event.meta.headers.X_Github_Event == "pull_request" and event.payload.action == "synchronize"
      action:
        post_event:
          fact:
            repository_name: "{{event.payload.repository.full_name}}"
            repo: "{{event.payload.pull_request.head.repo.clone_url}}"
            ref: "{{event.payload.pull_request.head.ref}}"
            pr: "{{event.payload.number}}"
            sha: "{{event.payload.after}}"
    - name: Read for review
      condition: event.meta.headers.X_Github_Event == "pull_request" and event.payload.action == "ready_for_review"
      action:
        post_event:
          fact:
            repository_name: "{{event.payload.repository.full_name}}"
            repo: "{{event.payload.pull_request.head.repo.clone_url}}"
            ref: "{{event.payload.pull_request.head.ref}}"
            pr: "{{event.payload.number}}"
            sha: "{{event.payload.pull_request.head.sha}}"
    - name: run tests
      condition: event.repository_name == "{{repo_name}}" and event.pr is defined
      action:
        run_playbook:
          name: continuous_integration.yml
          post_events: true
    - name: print output
      condition: event.output is defined
      action:
        print_event:
          var_root: output

    - name: Merge into main
      enabled: False
      condition: event.meta.headers.X_Github_Event == "push" and event.payload.ref == "refs/heads/main"
      action:
        run_playbook:
          name: continuous_deployment.yml
          var_root: payload
          post_events: true
    - name: debug
      enabled: False
      condition: event.payload is defined
      action:
        debug:
...
